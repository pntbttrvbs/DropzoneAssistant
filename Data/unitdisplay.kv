<UnitThumbnail>:
    orientation: 'vertical'
    spacing: 2
    #todo - should we get rid of the conditional statements

    Image:
        allow_stretch: False
        source: root.unit.imageSource() if root.unit else None
        mipmap: True

    Label:
        text: root.unit['name'] + '\n' + root.unit[root.displayedStat] + ' ' + root.displayedStat if root.unit else ' '
        text_size: root.width, None
        size: self.texture_size
        halign: 'center'


<CoreStatPopup>:
    #size_hint:(0.75,0.75)
    title: self.unit_name

#todo - add longpress/hover to give full name of stat value
<CoreStatSheet>:
    size_hint: (1, None)
    orientation: "vertical"
    Label:
        size_hint_y: 0.25
        text_size: self.size
        size: self.texture_size
        text: root.unit_name
        halign: 'left'
    RecycleView:
        id: RV
        viewclass: 'StatCell'
        #data: [{'text': '\n'.join([stat] + (root.unit[stat] if type(root.unit[stat]) is list else [root.unit[stat]]))} for stat in root.unit_stats if stat is not 'WEAPONS' and root.unit.statMappings[stat] in root.unit.baseStats]
        data: [{'statText': stat,'valText': 'n'.join(root.unit[stat]) if type(root.unit[stat]) is list else root.unit[stat]} for stat in root.unit_stats if stat is not 'WEAPONS' and root.unit.statMappings[stat] in root.unit.baseStats]
        #RecycleGridLayout:
        RecycleBoxLayout:
            canvas.before:
                Color:
                    rgba: 1,0,0,1
                Rectangle:
                    pos: self.pos
                    size: self.size
            orientation: 'horizontal'
            #rows: 1
            default_size: 80,80
            spacing: 5
            size_hint_x: None
            width: self.minimum_width

#todo: can I make these cell sizes flexible depending on contents?
#should I make this flexible to hold multiple values? would be good for stacking the weapons.
<StatCell@BoxLayout>
    orientation: 'vertical'
    statText: ''
    valText: ''
    width: stat.width
    Label:
        id: stat
        text: root.statText
        text_size: root.width, None
        size: self.texture_size
    Label:
        id: val
        text: root.valText
        text_size: root.width, None
        size: self.texture_size
        halign: 'center'
        valign: 'bottom'

